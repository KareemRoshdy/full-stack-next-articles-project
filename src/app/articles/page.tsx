import { getArticles, getArticlesCount } from "@/apiCalls/articleApiCall";
import ArticleItem from "@/components/articles/ArticleItem";
import Pagination from "@/components/articles/Pagination";
import SearchArticleInput from "@/components/articles/SearchArticleInput";
import { ARTICLE_PER_PAGE } from "@/utils/constants";
import { Article } from "@prisma/client";
import { Metadata } from "next";
import prisma from "@/utils/db"

export const metadata: Metadata = {
  title: "Articles",
  description: "Generated by create next app",
};

interface Props {
  searchParams: { pageNumber: string };
}

const ArticlesPage = async ({ searchParams }: Props) => {
  const { pageNumber } = searchParams;
  const articles: Article[] = await getArticles(pageNumber);
  const count: number = await prisma.article.count();
  const pages = Math.ceil(count / ARTICLE_PER_PAGE);

  return (
    <section className="p-5">
      <SearchArticleInput />

      <div className="m-auto flex my-10 items-center justify-center gap-7 flex-wrap">
        {articles.map((item: Article) => (
          <ArticleItem key={item.id} item={item} />
        ))}
      </div>

      <Pagination pageNumber={+pageNumber} route="/articles" pages={pages} />
    </section>
  );
};

export default ArticlesPage;
